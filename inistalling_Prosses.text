1 . initialing the project
        npm init 

2 . express installing
      npm install express --save

3 . typescript installing ( devDependencies )
       npm install typescript --save-dev

4 .  install mongoose 
       npm install mongoose --save

5 . cors installing
        npm i cors
        npm i @types/cors

6 . dotenv installing
         npm i dotenv

7 . ts config or tsconfig.json file create 
        tsc -init 
        change this config -> 
                              "rootDir": "./src", 
                              "outDir": "./dist",  

8 . converting ts to js create file dist ->
      tsc      

9 . installing always watching server and code ts to js -> 
         npm i -D ts-node-dev
        - run this -> 
         ts-node-dev --respawn --transpile-only ./src/server.ts
          
          make this scripts : "start:dev" : "ts-node-dev --respawn --transpile-only ./src/server.ts"
              
              { alter native for 
               installing nodemon -> ( devDependencies )
               npm i -D nodemon
               tsc -w }

10 . eslint setup follow this link -> 
     https://typescript-eslint.io/getting-started

      eslint command -> npx eslint src ( only for src folder)
                        npx eslint . (all over folder)
       make scripts   -> "lint" : "npx eslint .",
                         "lint:fix": "npx eslint . --fix",

11 . env file url dbms file na set  -> 
        mongodb+srv://movieCollection:movieCollection@cluster0.haioro2.mongodb.net/<dbms collection name>?retryWrites=true&w=majority&appName=Cluster0    


12 . interface -> schema + model -> route -> controller -> service 

13 . slug create time use date forming ->
        npm i date-fns 

14 .  create slug -> 
        npm i slugify
